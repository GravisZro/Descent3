name: Descent 3 Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'
      - '**/.github/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - '**/LICENSE'

jobs:
  build:
    name: ${{ matrix.os.osname }}-${{ matrix.os.arch }}-${{ matrix.os.compiler }}, ${{ matrix.build_type }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - runner: windows-latest
            preset: win32
            cc: cl
            cxx: cl
            osname: Windows
            arch: x86
            compiler: MSVC
          - runner: windows-latest
            preset: win64
            cc: cl
            cxx: cl
            osname: Windows
            arch: x86_64
            compiler: MSVC
          - runner: macos-12 # This is supposed to be Intel for now, and what macos-latest is defaulting to for some reason (as of 04/2024)
            preset: mac
            cc: cc
            cxx: c++
            osname: MacOS
            arch: x86_64
            compiler: Clang
          - runner: macos-14 # This is supposed to be M1
            preset: mac
            cc: cc
            cxx: c++
            osname: MacOS
            arch: ARM64
            compiler: Clang
          - runner: ubuntu-latest
            preset: linux-gcc
            cc: gcc
            cxx: g++
            osname: Linux
            arch: x86_64
            compiler: GCC
          - runner: ubuntu-latest
            preset: linux-clang
            cc: clang
            cxx: clang++
            osname: Linux
            arch: x86_64


    runs-on: ${{ matrix.os.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        if: ${{ matrix.os.preset == 'mac' }}
        run: |
          # Install packages from Homebrew
          brew bundle install

      - name: Install Linux GCC dependencies
        if: ${{ matrix.os.preset == 'linux-gcc' }}
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            ninja-build cmake g++ libgtest-dev libsdl2-dev libncurses-dev zlib1g-dev

      - name: Install Linux Clang dependencies
        if: ${{ matrix.os.preset == 'linux-clang' }}
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends \
            ninja-build cmake clang libgtest-dev libsdl2-dev libncurses-dev zlib1g-dev


      - name: Configure CMake
        env:
          CC: ${{ matrix.os.cc }}
          CXX: ${{ matrix.os.cxx }}
          VCPKG_ROOT: C:/vcpkg
        run: cmake --preset ${{ matrix.os.preset }} -DBUILD_TESTING=ON -DENABLE_LOGGER=ON -DFORCE_PORTABLE_INSTALL=ON

      - name: Build ${{ matrix.build_type }} ${{ matrix.os.osname }}-${{ matrix.os.arch }}-${{ matrix.os.compiler }}
        run: cmake --build --preset ${{ matrix.os.preset }} --config ${{ matrix.build_type }} --verbose

      - name: Run ${{ matrix.build_type }} Unittests
        run: ctest --preset ${{ matrix.os.preset }} -C ${{ matrix.build_type }}

      - name: Local install
        # There no cmake install presets so install in traditional way
        run: cmake --install builds/${{ matrix.os.preset }}/ --config ${{ matrix.build_type }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Descent3_${{ matrix.build_type }}_${{ matrix.os.osname }}-${{ matrix.os.arch }}-${{ matrix.os.compiler }}
          path: ${{ github.workspace }}/builds/${{ matrix.os.osname }}/installed/
